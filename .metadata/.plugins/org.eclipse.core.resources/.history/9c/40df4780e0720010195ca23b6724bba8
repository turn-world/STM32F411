/*
 * button.c
 *
 *  Created on: Aug 7, 2025
 *      Author: young
 */

#include "button.h"
#include "cli.h"

typedef struct
{
	GPIO_TypeDef  *port;
	uint32_t		pin;
	GPIO_PinState	on_state;

} button_tbl_t;

button_tbl_t button_tbl[BUTTON_MAX_CH] =
{
		{GPIOA,GPIO_PIN_0,GPIO_PIN_RESET},
};

bool buttonInit(void)
{
	bool ret = true;

	GPIO_InitTypeDef GPIO_InitStruct = {0};

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOA_CLK_ENABLE();

	/*Configure GPIO pin : PA0 */
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
	GPIO_InitStruct.Pull = GPIO_PULLUP;

	for(int i = 0; i < BUTTON_MAX_CH; i++)
	{
		GPIO_InitStruct.Pin = button_tbl[i].pin;
		HAL_GPIO_Init(button_tbl[i].port, &GPIO_InitStruct);
	}
	return ret;
}
bool buttonGetPressed(uint8_t ch)
{
	bool ret = false;
	if( ch >= BUTTON_MAX_CH )
	{
		return false;
	}

	GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)

	if(HAL_GPIO_ReadPin(button_tbl[ch].port))
	return ret;
}
